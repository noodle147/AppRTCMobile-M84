plugins {
    id 'com.android.library'
}

android {
    compileSdk 32

    defaultConfig {
        minSdk 21
        targetSdk 32

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation project(":sdk.android.audio_api_java")
    implementation project(":sdk.android.base_java")
    implementation project(":sdk.android.builtin_audio_codecs_java")
    implementation project(":sdk.android.default_video_codec_factory_java")
    implementation project(":sdk.android.java_audio_device_module_java")
    implementation project(":sdk.android.logging_java")
    implementation project(":sdk.android.swcodecs_java")
    implementation project(":sdk.android.video_api_java")
    implementation project(":sdk.android.video_java")
    implementation project(":modules.audio_device.audio_device_java")
    implementation project(":rtc_base.base_java")
    implementation 'androidx.annotation:annotation:1.4.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

afterEvaluate {
    def tasksToDisable = tasks.findAll {
        return (it.name.equals('generateDebugSources')  // causes unwanted AndroidManifest.java
                || it.name.equals('generateReleaseSources')
                || it.name.endsWith('BuildConfig')  // causes unwanted BuildConfig.java
                || it.name.equals('preDebugAndroidTestBuild')
                || it.name.endsWith('Aidl')
                || it.name.endsWith('Renderscript')
                || it.name.endsWith('Shaders'))
    }
    tasksToDisable.each { Task task ->
        task.enabled = false
    }
}