plugins {
    id 'com.android.library'
}

android {
    compileSdk 32

    defaultConfig {
        minSdk 21
        targetSdk 32

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    sourceSets {
        main {
            java.srcDirs += '../../../webrtc/src/sdk/android/src/java'
            java.srcDirs += '../../../webrtc/src/sdk/android/api'
            java.filter.exclude([
                    "org/webrtc/VideoProcessor.java",
                    "org/webrtc/CameraVideoCapturer.java",
                    "org/webrtc/SdpObserver.java",
                    "org/webrtc/SSLCertificateVerifier.java",
                    "org/webrtc/Metrics.java",
                    "org/webrtc/RtcCertificatePem.java",
                    "org/webrtc/MediaSource.java",
                    "org/webrtc/SoftwareVideoEncoderFactory.java",
                    "org/webrtc/PeerConnection.java",
                    "org/webrtc/audio/*.java",
                    "org/webrtc/CapturerObserver.java",
                    "org/webrtc/VideoDecoder.java",
                    "org/webrtc/DefaultVideoEncoderFactory.java",
                    "org/webrtc/SurfaceEglRenderer.java",
                    "org/webrtc/VideoSource.java",
                    "org/webrtc/RTCStatsCollectorCallback.java",
                    "org/webrtc/SessionDescription.java",
                    "org/webrtc/EncodedImage.java",
                    "org/webrtc/BuiltinAudioDecoderFactoryFactory.java",
                    "org/webrtc/FecControllerFactoryFactoryInterface.java",
                    "org/webrtc/VideoDecoderFactory.java",
                    "org/webrtc/Camera1Enumerator.java",
                    "org/webrtc/VideoFrame.java",
                    "org/webrtc/VideoSink.java",
                    "org/webrtc/DataChannel.java",
                    "org/webrtc/FrameDecryptor.java",
                    "org/webrtc/Camera1Capturer.java",
                    "org/webrtc/PlatformSoftwareVideoDecoderFactory.java",
                    "org/webrtc/ScreenCapturerAndroid.java",
                    "org/webrtc/RtpTransceiver.java",
                    "org/webrtc/VideoEncoderFactory.java",
                    "org/webrtc/RtpReceiver.java",
                    "org/webrtc/LibvpxVp9Decoder.java",
                    "org/webrtc/FileVideoCapturer.java",
                    "org/webrtc/TurnCustomizer.java",
                    "org/webrtc/DtmfSender.java",
                    "org/webrtc/RtpParameters.java",
                    "org/webrtc/MediaTransportFactoryFactory.java",
                    "org/webrtc/CryptoOptions.java",
                    "org/webrtc/VideoCodecInfo.java",
                    "org/webrtc/NativeLibraryLoader.java",
                    "org/webrtc/AudioProcessingFactory.java",
                    "org/webrtc/PeerConnectionDependencies.java",
                    "org/webrtc/NetworkStatePredictorFactoryFactory.java",
                    "org/webrtc/CallSessionFileRotatingLogSink.java",
                    "org/webrtc/Camera2Enumerator.java",
                    "org/webrtc/HardwareVideoDecoderFactory.java",
                    "org/webrtc/CandidatePairChangeEvent.java",
                    "org/webrtc/NetworkMonitor.java",
                    "org/webrtc/NetEqFactoryFactory.java",
                    "org/webrtc/AudioDecoderFactoryFactory.java",
                    "org/webrtc/MediaStreamTrack.java",
                    "org/webrtc/MediaStream.java",
                    "org/webrtc/StatsObserver.java",
                    "org/webrtc/LibvpxVp8Decoder.java",
                    "org/webrtc/AudioSource.java",
                    "org/webrtc/StatsReport.java",
                    "org/webrtc/LibvpxVp8Encoder.java",
                    "org/webrtc/LibvpxVp9Encoder.java",
                    "org/webrtc/NativePeerConnectionFactory.java",
                    "org/webrtc/Camera2Capturer.java",
                    "org/webrtc/NetworkControllerFactoryFactory.java",
                    "org/webrtc/VideoCodecStatus.java",
                    "org/webrtc/SoftwareVideoDecoderFactory.java",
                    "org/webrtc/SurfaceViewRenderer.java",
                    "org/webrtc/AudioTrack.java",
                    "org/webrtc/FrameEncryptor.java",
                    "org/webrtc/VideoTrack.java",
                    "org/webrtc/BuiltinAudioEncoderFactoryFactory.java",
                    "org/webrtc/RtpSender.java",
                    "org/webrtc/CameraEnumerationAndroid.java",
                    "org/webrtc/RTCStats.java",
                    "org/webrtc/Predicate.java",
                    "org/webrtc/NetworkMonitorAutoDetect.java",
                    "org/webrtc/AudioEncoderFactoryFactory.java",
                    "org/webrtc/IceCandidate.java",
                    "org/webrtc/RefCounted.java",
                    "org/webrtc/VideoFileRenderer.java",
                    "org/webrtc/VideoEncoder.java",
                    "org/webrtc/DefaultVideoDecoderFactory.java",
                    "org/webrtc/MediaConstraints.java",
                    "org/webrtc/CameraEnumerator.java",
                    "org/webrtc/HardwareVideoEncoderFactory.java",
                    "org/webrtc/PeerConnectionFactory.java",
                    "org/webrtc/RTCStatsReport.java",
                    "org/webrtc/audio/*.java",
                    "org/webrtc/VideoCodecMimeType.java",
                    "org/webrtc/WebRtcClassLoader.java",
                    "org/webrtc/Empty.java",
                    "org/webrtc/CalledByNative.java",
                    "org/webrtc/MediaCodecWrapperFactory.java",
                    "org/webrtc/RefCountDelegate.java",
                    "org/webrtc/MediaCodecWrapperFactoryImpl.java",
                    "org/webrtc/JniHelper.java",
                    "org/webrtc/MediaCodecWrapper.java",
                    "org/webrtc/JniCommon.java",
                    "org/webrtc/NativeLibrary.java",
                    "org/webrtc/AndroidVideoDecoder.java",
                    "org/webrtc/MediaCodecUtils.java",
                    "org/webrtc/MediaCodecVideoDecoderFactory.java",
                    "org/webrtc/NativeAndroidVideoTrackSource.java",
                    "org/webrtc/Camera1Session.java",
                    "org/webrtc/CameraSession.java",
                    "org/webrtc/Camera2Session.java",
                    "org/webrtc/JNILogging.java",
                    "org/webrtc/CalledByNativeUnchecked.java",
                    "org/webrtc/DynamicBitrateAdjuster.java",
                    "org/webrtc/NV12Buffer.java",
                    "org/webrtc/Histogram.java",
                    "org/webrtc/BaseBitrateAdjuster.java",
                    "org/webrtc/HardwareVideoEncoder.java",
                    "org/webrtc/NativeCapturerObserver.java",
                    "org/webrtc/FramerateBitrateAdjuster.java",
                    "org/webrtc/BitrateAdjuster.java",
                    "org/webrtc/CameraCapturer.java",
            ])
        }
    }
}

dependencies {
    implementation project(':rtc_base.base_java')
    implementation project(':sdk.android.base_java')
    implementation project(':sdk.android.video_api_java')
    implementation 'androidx.annotation:annotation:1.4.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

afterEvaluate {
    def tasksToDisable = tasks.findAll {
        return (it.name.equals('generateDebugSources')  // causes unwanted AndroidManifest.java
                || it.name.equals('generateReleaseSources')
                || it.name.endsWith('BuildConfig')  // causes unwanted BuildConfig.java
                || it.name.equals('preDebugAndroidTestBuild')
                || it.name.endsWith('Aidl')
                || it.name.endsWith('Renderscript')
                || it.name.endsWith('Shaders'))
    }
    tasksToDisable.each { Task task ->
        task.enabled = false
    }
}