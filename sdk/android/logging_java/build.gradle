plugins {
    id 'com.android.library'
}

android {
    compileSdk 32

    defaultConfig {
        minSdk 21
        targetSdk 32

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    sourceSets {
        main {
            java.srcDirs += '../../../webrtc/src/sdk/android/src/java'
            java.filter.exclude([
                    "org/webrtc/audio/*.java",
                    "org/webrtc/H264Utils.java",
                    "org/webrtc/WrappedNativeI420Buffer.java",
                    "org/webrtc/VideoDecoderWrapper.java",
                    "org/webrtc/VideoCodecMimeType.java",
                    "org/webrtc/WebRtcClassLoader.java",
                    "org/webrtc/Empty.java",
                    "org/webrtc/CalledByNative.java",
                    "org/webrtc/MediaCodecWrapperFactory.java",
                    "org/webrtc/RefCountDelegate.java",
                    "org/webrtc/MediaCodecWrapperFactoryImpl.java",
                    "org/webrtc/EglBase14Impl.java",
                    "org/webrtc/JniHelper.java",
                    "org/webrtc/MediaCodecWrapper.java",
                    "org/webrtc/JniCommon.java",
                    "org/webrtc/NativeLibrary.java",
                    "org/webrtc/AndroidVideoDecoder.java",
                    "org/webrtc/NV21Buffer.java",
                    "org/webrtc/MediaCodecUtils.java",
                    "org/webrtc/MediaCodecVideoDecoderFactory.java",
                    "org/webrtc/NativeAndroidVideoTrackSource.java",
                    "org/webrtc/Camera1Session.java",
                    "org/webrtc/CameraSession.java",
                    "org/webrtc/EglBase10Impl.java",
                    "org/webrtc/Camera2Session.java",
                    "org/webrtc/CalledByNativeUnchecked.java",
                    "org/webrtc/FramerateBitrateAdjuster.java",
                    "org/webrtc/DynamicBitrateAdjuster.java",
                    "org/webrtc/VideoEncoderWrapper.java",
                    "org/webrtc/NV12Buffer.java",
                    "org/webrtc/Histogram.java",
                    "org/webrtc/BaseBitrateAdjuster.java",
                    "org/webrtc/HardwareVideoEncoder.java",
                    "org/webrtc/NativeCapturerObserver.java",
                    "org/webrtc/GlGenericDrawer.java",
                    "org/webrtc/BitrateAdjuster.java",
                    "org/webrtc/CameraCapturer.java",
            ])
        }
    }
}

dependencies {
    implementation project(':rtc_base.base_java')
    implementation project(':sdk.android.base_java')
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

afterEvaluate {
    def tasksToDisable = tasks.findAll {
        return (it.name.equals('generateDebugSources')  // causes unwanted AndroidManifest.java
                || it.name.equals('generateReleaseSources')
                || it.name.endsWith('BuildConfig')  // causes unwanted BuildConfig.java
                || it.name.equals('preDebugAndroidTestBuild')
                || it.name.endsWith('Aidl')
                || it.name.endsWith('Renderscript')
                || it.name.endsWith('Shaders'))
    }
    tasksToDisable.each { Task task ->
        task.enabled = false
    }
}